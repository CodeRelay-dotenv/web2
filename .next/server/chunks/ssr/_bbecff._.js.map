{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/CodeRelay/main/contextCanvas/app/%28dashboard%29/_components/navbar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Navbar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Navbar() from the server but Navbar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(dashboard)/_components/navbar.tsx <module evaluation>\",\n    \"Navbar\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,wEACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file://C%3A/CodeRelay/main/contextCanvas/app/%28dashboard%29/_components/navbar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Navbar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Navbar() from the server but Navbar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(dashboard)/_components/navbar.tsx\",\n    \"Navbar\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,oDACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file://C%3A/CodeRelay/main/contextCanvas/app/%28dashboard%29/_components/orgSidebar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const OrgSidebar = registerClientReference(\n    function() { throw new Error(\"Attempted to call OrgSidebar() from the server but OrgSidebar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(dashboard)/_components/orgSidebar.tsx <module evaluation>\",\n    \"OrgSidebar\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,4EACA"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file://C%3A/CodeRelay/main/contextCanvas/app/%28dashboard%29/_components/orgSidebar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const OrgSidebar = registerClientReference(\n    function() { throw new Error(\"Attempted to call OrgSidebar() from the server but OrgSidebar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(dashboard)/_components/orgSidebar.tsx\",\n    \"OrgSidebar\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,wDACA"}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file://C%3A/CodeRelay/main/contextCanvas/hooks/useApiMutation.ts"],"sourcesContent":["import { useMutation } from \"convex/react\";\r\nimport type {\r\n  DefaultFunctionArgs,\r\n  FunctionReference,\r\n  OptionalRestArgs,\r\n} from \"convex/server\";\r\nimport { useState } from \"react\";\r\n\r\nexport const useApiMutation = <\r\n  Args extends DefaultFunctionArgs = any,\r\n  ReturnType = any\r\n>(\r\n  mutationFn: FunctionReference<\"mutation\", \"public\", Args, ReturnType>\r\n) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const apiMutation = useMutation(mutationFn);\r\n\r\n  const mutate = (\r\n    ...payload: OptionalRestArgs<\r\n      FunctionReference<\"mutation\", \"public\", Args, ReturnType>\r\n    >\r\n  ) => {\r\n    setIsLoading(true);\r\n    return apiMutation(...payload)\r\n      .finally(() => setIsLoading(false))\r\n      .then((result) => result)\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  return {\r\n    mutate,\r\n    isLoading,\r\n  };\r\n};"],"names":[],"mappings":";;;AAAA;AAMA;AANA;;;AAQO,MAAM,iBAAiB,CAI5B;IAEA,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,cAAc,CAAA,GAAA,wJAAA,CAAA,cAAW,AAAD,EAAE;IAEhC,MAAM,SAAS,CACb,GAAG;QAIH,aAAa;QACb,OAAO,eAAe,SACnB,OAAO,CAAC,IAAM,aAAa,QAC3B,IAAI,CAAC,CAAC,SAAW,QACjB,KAAK,CAAC,CAAC;YACN,MAAM;QACR;IACJ;IAEA,OAAO;QACL;QACA;IACF;AACF"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://C%3A/CodeRelay/main/contextCanvas/app/%28dashboard%29/_components/sidebar/list.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const List = registerClientReference(\n    function() { throw new Error(\"Attempted to call List() from the server but List is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(dashboard)/_components/sidebar/list.tsx <module evaluation>\",\n    \"List\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,OAAO,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,8EACA"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file://C%3A/CodeRelay/main/contextCanvas/app/%28dashboard%29/_components/sidebar/list.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const List = registerClientReference(\n    function() { throw new Error(\"Attempted to call List() from the server but List is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(dashboard)/_components/sidebar/list.tsx\",\n    \"List\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,OAAO,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,0DACA"}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file://C%3A/CodeRelay/main/contextCanvas/app/%28dashboard%29/_components/sidebar/newButton.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const NewButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call NewButton() from the server but NewButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(dashboard)/_components/sidebar/newButton.tsx <module evaluation>\",\n    \"NewButton\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,mFACA"}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":["file://C%3A/CodeRelay/main/contextCanvas/app/%28dashboard%29/_components/sidebar/newButton.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const NewButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call NewButton() from the server but NewButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(dashboard)/_components/sidebar/newButton.tsx\",\n    \"NewButton\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,+DACA"}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file://C%3A/CodeRelay/main/contextCanvas/convex/_generated/api.js"],"sourcesContent":["/* eslint-disable */\n/**\n * Generated `api` utility.\n *\n * THIS CODE IS AUTOMATICALLY GENERATED.\n *\n * To regenerate, run `npx convex dev`.\n * @module\n */\n\nimport { anyApi } from \"convex/server\";\n\n/**\n * A utility for referencing Convex functions in your app's API.\n *\n * Usage:\n * ```js\n * const myFunctionReference = api.myModule.myFunction;\n * ```\n */\nexport const api = anyApi;\nexport const internal = anyApi;\n"],"names":[],"mappings":"AAAA,kBAAkB,GAClB;;;;;;;CAOC;;;;AAED;AAAA;;AAUO,MAAM,MAAM,sJAAA,CAAA,SAAM;AAClB,MAAM,WAAW,sJAAA,CAAA,SAAM"}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file://C%3A/CodeRelay/main/contextCanvas/app/%28dashboard%29/_components/sidebar/index.tsx"],"sourcesContent":["import { useApiMutation } from \"@/hooks/useApiMutation\";\r\nimport { List } from \"./list\";\r\nimport { NewButton } from \"./newButton\";\r\nimport { api } from \"@/convex/_generated/api\";\r\nimport { toast } from \"sonner\";\r\n\r\nexport function Sidebar() {\r\n  const {mutate:createQ,isLoading} = useApiMutation(api.qna.createQuestion);\r\n\r\n  const handleNewQuestion = () =>{\r\n    createQ({title:\"New Question\",\r\n        question_detail:\"Pehla question bnaya hua h\",\r\n        tag:\"study\"})\r\n        .then((question)=>{\r\n          console.log(\"Bangya Question\",question)\r\n          toast.success(\"Bangya question\")\r\n        })\r\n        .catch(()=>{\r\n          console.log(\"Error in question creation\")\r\n          toast.error(\"Error while creating question\")\r\n        })\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <aside className=\"fixed z-[1] left-0 bg-blue-950 h-full w-[60px] flex p-3 flex-col gap-y-4 text-white\">\r\n      <List />\r\n      <NewButton />\r\n      <button onClick={handleNewQuestion}>A</button>\r\n    </aside>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;AAEO,SAAS;IACd,MAAM,EAAC,QAAO,OAAO,EAAC,SAAS,EAAC,GAAG,CAAA,GAAA,uHAAA,CAAA,iBAAc,AAAD,EAAE,2HAAA,CAAA,MAAG,CAAC,GAAG,CAAC,cAAc;IAExE,MAAM,oBAAoB;QACxB,QAAQ;YAAC,OAAM;YACX,iBAAgB;YAChB,KAAI;QAAO,GACV,IAAI,CAAC,CAAC;YACL,QAAQ,GAAG,CAAC,mBAAkB;YAC9B,wIAAA,CAAA,QAAK,CAAC,OAAO,CAAC;QAChB,GACC,KAAK,CAAC;YACL,QAAQ,GAAG,CAAC;YACZ,wIAAA,CAAA,QAAK,CAAC,KAAK,CAAC;QACd;IACN;IAKA,qBACE,8OAAC;QAAM,WAAU;;0BACf,8OAAC,uJAAA,CAAA,OAAI;;;;;0BACL,8OAAC,4JAAA,CAAA,YAAS;;;;;0BACV,8OAAC;gBAAO,SAAS;0BAAmB;;;;;;;;;;;;AAG1C"}},
    {"offset": {"line": 267, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 273, "column": 0}, "map": {"version":3,"sources":["file://C%3A/CodeRelay/main/contextCanvas/app/%28dashboard%29/layout.tsx"],"sourcesContent":["import { Navbar } from \"./_components/navbar\";\r\nimport { OrgSidebar } from \"./_components/orgSidebar\";\r\nimport { Sidebar } from \"./_components/sidebar\";\r\n\r\ninterface DashboardLayoutProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport default function DashboardLayout({ children }: DashboardLayoutProps) {\r\n  return (\r\n    <main className=\"h-full \">\r\n      <Sidebar />\r\n      <div className=\"pl-[60px] h-full\">\r\n        <div className=\"flex gap-x-3 h-full\">\r\n          <OrgSidebar />\r\n          <div className=\"h-full flex-1\">\r\n            <Navbar />\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAMe,SAAS,gBAAgB,EAAE,QAAQ,EAAwB;IACxE,qBACE,8OAAC;QAAK,WAAU;;0BACd,8OAAC,wJAAA,CAAA,UAAO;;;;;0BACR,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,kJAAA,CAAA,aAAU;;;;;sCACX,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,8IAAA,CAAA,SAAM;;;;;gCACN;;;;;;;;;;;;;;;;;;;;;;;;AAMb"}},
    {"offset": {"line": 336, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}